@use "sass:math";

$columns: 12;

$xxl: 1400px;
$xl: 1200px;
$lg: 992px;
$md: 768px;
$sm: 576px;
$xs: 480px;

$breakpoints: (
	xxl: $xxl,
	xl: $xl,
	lg: $lg,
	md: $md,
	sm: $sm,
	xs: $xs,
);

@mixin respondTo($breakpoint) {
	@if map-has-key($breakpoints, $breakpoint) {
		@media (max-width: map-get($breakpoints, $breakpoint)) {
			@content;
		}
	} @else {
		@warn "Unknown breakpoint: #{$breakpoint}.";
	}
}

@function findPreviousBreakepoint($prefix, $return: "prefix") {
	$previousPrefix: null;
	$previousBreakpoint: null;

	@each $currentPrefix, $currentBreakpoint in $breakpoints {
		@if $currentPrefix == $prefix and $previousPrefix != null {
			@if $return == "prefix" {
				@return getPrefix($previousPrefix);
			} @else {
				@return $previousBreakpoint;
			}
		}

		$previousPrefix: $currentPrefix;
		$previousBreakpoint: $currentBreakpoint;
	}

	@return null;
}
@function getPrefix($prefix: "") {
	@return if($prefix == "", $prefix, "#{$prefix}-");
}

@mixin colwidth($size, $prefix: "") {
	$prefix: getPrefix($prefix);

	&.col--#{$prefix}#{$size} {
		flex: 0 0 (math.div(100%, $columns) * $size);
		max-width: (math.div(100%, $columns) * $size);
	}
}

.row {
	display: flex;
	flex-wrap: wrap;

	$all-directions: (top, right, bottom, left);
	$all-properties: ("padding", "margin");

	@each $property in $all-properties {
		$values: ();

		@each $direction in $all-directions {
			--get-#{$property}-#{$direction}: var(--#{$property}-#{$direction}, 0);

			$value: var(--get-#{$property}-#{$direction}, 0);

			$values: append($values, $value, space);
		}

		#{$property}: $values;
	}

	@each $prefix, $breakpoint in $breakpoints {
		@include respondTo($prefix) {
			$previousPrefix: findPreviousBreakepoint($prefix);

			@each $property in $all-properties {
				$values: ();

				@each $direction in $all-directions {
					--get-#{$prefix}-#{$property}-#{$direction}: var(
						--#{$prefix}-#{$property}-#{$direction},
						var(--get-#{$previousPrefix}#{$property}-#{$direction})
					);

					$value: var(
						--get-#{$prefix}-#{$property}-#{$direction},
						var(--get-#{$previousPrefix}#{$property}-#{$direction})
					);

					$values: append($values, $value, space);
				}

				#{$property}: $values;
			}
		}
	}

	> .col {
		flex: 1;
		position: relative;

		@for $i from 1 through $columns {
			@include colwidth($i);
		}

		@each $prefix, $breakpoint in $breakpoints {
			@for $i from 1 through $columns {
				@include respondTo($prefix) {
					@include colwidth($i, $prefix);
				}
			}
		}
	}
}
