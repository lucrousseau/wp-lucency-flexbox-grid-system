@mixin paddingMargin($reset: false) {
	$all-directions: (top, right, bottom, left);
	$all-properties: ("padding", "margin");

	@if $reset != true {
		@each $prefix, $breakpoint in $breakpoints {
			$originalPrefix: $prefix;
			$prefix: getPrefix($prefix);

			@if $prefix == "" {
				@include paddingMarginValuesProps(
					$prefix,
					$originalPrefix,
					$all-directions,
					$all-properties
				);
			} @else {
				@media screen and (max-width: $breakpoint) {
					@include paddingMarginValuesProps(
						$prefix,
						$originalPrefix,
						$all-directions,
						$all-properties
					);
				}
			}
		}
	}

	@each $property in $all-properties {
		@each $direction in $all-directions {
			@each $prefix, $breakpoint in $breakpoints {
				$prefix: getPrefix($prefix);

				--#{$prefix}#{$property}-#{$direction}: initial;
			}
		}
	}
}

@mixin paddingMarginValuesProps(
	$prefix: null,
	$originalPrefix: null,
	$all-directions,
	$all-properties
) {
	@each $property in $all-properties {
		@each $direction in $all-directions {
			$previousPrefix: getPrefix(findPreviousBreakepoint($originalPrefix));
			$value: var(--get-#{$previousPrefix}#{$property}-#{$direction});

			@if $prefix == "" {
				$value: "initial";
			}

			--get-#{$prefix}#{$property}-#{$direction}: var(
				--#{$prefix}#{$property}-#{$direction},
				#{$value}
			);
		}
	}

	@each $property in $all-properties {
		@each $direction in $all-directions {
			#{$property}-#{$direction}: var(
				--get-#{$prefix}#{$property}-#{$direction}
			);
		}
	}
}

.container,
.row {
	@include paddingMargin();
	:where(.wp-block) {
		margin-top: 0;
		margin-bottom: 0;
		.wp-block {
			margin: 0;
		}
	}
	align-items: inherit;
	justify-content: inherit;

	@each $prefix, $breakpoint in $breakpoints {
		$prefix: getPrefix($prefix);

		@if $prefix == "" {
			&--left {
				justify-content: flex-start;
			}
			&--center {
				justify-content: center;
			}
			&--right {
				justify-content: flex-end;
			}
			&--top {
				align-items: flex-start;
			}
			&--middle {
				align-items: center;
			}
			&--bottom {
				align-items: flex-end;
			}
		} @else {
			@media screen and (max-width: $breakpoint) {
				&--#{$prefix}left {
					justify-content: flex-start;
				}
				&--#{$prefix}center {
					justify-content: center;
				}
				&--#{$prefix}right {
					justify-content: flex-end;
				}
				&--#{$prefix}top {
					align-items: flex-start;
				}
				&--#{$prefix}middle {
					align-items: center;
				}
				&--#{$prefix}bottom {
					align-items: flex-end;
				}
			}
		}
	}
}

.has-text-align {
	@each $prefix, $breakpoint in $breakpoints {
		$prefix: getPrefix($prefix);

		@if $prefix == "" {
			&-left {
				text-align: left;
			}
			&-center {
				text-align: center;
			}
			&-right {
				text-align: right;
			}
		} @else {
			@media screen and (max-width: $breakpoint) {
				&-#{$prefix}left {
					text-align: left;
				}
				&-#{$prefix}center {
					text-align: center;
				}
				&-#{$prefix}right {
					text-align: right;
				}
			}
		}
	}
}
